variables:
  env:
    value: "sit"
    description: "Enter the environment name: sit1/uat/preprod/preproddr1/hotfix/prod/proddr"
  resource:
    value: "select"
    description: "Select the resource name."
    options:
      - "select"
      - "EC2"
      - "RDS"
      - "S3"
      - "EKS"
      - "ELB"
      - "ROUTE53"
      - "SG"
      - "IAM"
      - "OPENSEARCH"
      - "LAMBDA"
      - "API"
      - "DMS"
      - "REDSHIFT"
stages:
    - Audit

Job - Prepare the Audit report for AWS resources:
  stage: Audit
  script:
    - | 
      set +x    
      cd ${CI_PROJECT_DIR}/
      find . -type f -name "*.*" -exec chmod u=rwx {} \;
      if [[ "${resource^^}" == "EC2" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 ec2.py "$env"
      elif [[ "${resource^^}" == "EKS" ]]; then
        echo "Deploying selective components with different release number now..."
        python3 EKS_Audit.py "$env"
      elif [[ "${resource^^}" == "S3" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 S3.py "$env"
      elif [[ "${resource^^}" == "RDS" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 rds.py "$env"
      elif [[ "${resource^^}" == "ELB" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 LB_Audit.py "$env"
      elif [[ "${resource^^}" == "ROUTE53" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 route53_audit.py "$env"
      elif [[ "${resource^^}" == "SG" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 sg-audit.py "$env" 
      elif [[ "${resource^^}" == "IAM" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 iam-audit.py "$env" 
      elif [[ "${resource^^}" == "OPENSEARCH" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 opensearch.py "$env"
      elif [[ "${resource^^}" == "LAMBDA" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 lambda.py "$env"
      elif [[ "${resource^^}" == "API" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 api-audit.py "$env" 
      elif [[ "${resource^^}" == "DMS" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 dms-audit.py "$env" 
      elif [[ "${resource^^}" == "REDSHIFT" ]]; then
        echo "Executing operation $resource in ${env^^} environment"
        python3 redshift-audit.py "$env" 
      else
        echo "Input variable \"resource\" does not have one of the expected values: EKS/EC2/RDS/API/ROUTE53/S3/ELB/SG/OPENSEARCH/LAMBDA/DMS/REDSHIFT"
        exit 1
      fi
  when: manual
  allow_failure: false
  only:
    refs:
      - aws-resource-audit
  tags: 
    - dds-server-sre-metric-reports
