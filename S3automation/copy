def runOracleScript():
    #file containing the queries
    query_file = sys.argv[2]

    # Define the connection string
    connection_string = sys.argv[3]

    # Read the SQL queries from the file
    with open(query_file, 'r') as file:
        queries = file.read()

    # Split the queries into separate statements
    query_statements = queries.split(';')

    # Execute each query one by one
    modified_output = ''
    for statement in query_statements:
        # Skip empty statements
        if not statement.strip():
            continue
            
        #appending a semicolon to the statement
        statement = statement.strip() + ';'
        
        # Execute sqlplus with the connection string and the current statement as input
        proc = subprocess.Popen(['sqlplus', '-S', connection_string], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
        output, error = proc.communicate(input=statement)

        # Split the output into lines
        lines = output.strip().split('\n')

        # Get the result from the last line of the output (excluding the "count(*)" line)
        result = lines[-1].strip() if lines else 'No result'
        if "ORA-" in result:
            result = "ERROR:" + result.strip()

        # Append the table name, query, and result to the modified output  
        modified_output += f'{result}\n'

    # Close the subprocess and release resources
    proc.stdin.close()
    proc.stdout.close()
    proc.stderr.close()
    proc.wait()
    
    # Print or process the modified output as needed
    print(modified_output)

if funcName == 'runOracleScript':
    runOracleScript()

python3 db_utilities.py "runpostgresqlScript" "$sql_file_postgresql" "$host_postgresql" "$port_postgresql" "$db_name_postgresql" "$user_postgresql" "$postgresql_passwrd" > $postgresql_log_file

