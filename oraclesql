provider "aws" {
  region = local.region
  access_key = var.aws_access_key
  secret_key = var.aws_secret_key

}

locals {
  region = "us-east-1"
  tags = {
    component       = "nsl"
    env             = "devopssit1"
    managedby       = "devops team"
  }
}

module "rds" {
source      = "/home/gitlab-runner/builds/txLn91xp/0/hmno-devops/nal-infra-automation/rds/modules/rds"
  rds_subnet_group_name    = "default-vpc-070d160d892ae8102-tf"
  subnet_ids      = ["subnet-0c4d8f9e8e4bf48e5","subnet-0c609e30ec8a0fb5a"]

  name        = "rds-launch-wizard-tf"
  description = "rds security group"
#  inboundcidr = ["0.0.0.0/0"]
  vpc_id      = "vpc-070d160d892ae8102"
  ingress_rules  = [       
        {
          from_port   = 17001
          to_port     = 17001
          protocol    = "tcp"
          cidr_block  = "10.81.7.210/32"
          description = "Open VPN"
        }
    ]

  rds_pg_name   = "wtg-nal-devopssit-primary"
  rds_pg_family_name      = "oracle-ee-19"

  rds_og_name                     = "options-group-orcl-wtg-nal-devopssit"
  rds_og_description = "option group created using Terraform for NAL"
  rds_og_engine_name              = "oracle-ee"
  rds_og_major_engine_version    = "19"

    identifier           = "wtg-nal-devopssit-primary"
    // snapshot_id        = "arn:aws:rds:us-east-1:249914066661:snapshot:wtg-nsl-uat-rds-ss-tf-20201208090100"
    // snapshot_id         = var.snapshot_id
  allocated_storage    = 1536
  storage_type         = "io1"
  iops                 = "2500"       ## this has to be set if storage type is io1
  engine               = "oracle-ee"
  engine_version       = "19.0.0.0.ru-2023-07.rur-2023-07.r1"
  instance_class       = "db.m5.2xlarge"
  rds_db_name_sid    = "NALDB" 
  rds_username    = "adminsit"
  rds_password     = "admin1234"
  #rds_password     = var.rds_pswrd
  license_model        = "bring-your-own-license"
  character_set_name      = "AL32UTF8"
  multi_az        = true
  # Enhanced monitoring
  monitoring_interval = 15
  monitoring_role_arn = "arn:aws:iam::942444466772:role/rds-monitoring-role"
  #create_monitoring_role                = true
  tags = local.tags
}

#resource "aws_kms_key" "kms_key_rds" {
#  description             = "KMS key rds"
#  deletion_window_in_days = 10
#}

#resource "aws_kms_alias" "kms_key_al3as" {
#  name          = "alias/dd-api-key"
#  target_key_id = aws_kms_key.kms_key_rds.key_id
#}
